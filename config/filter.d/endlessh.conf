# Fail2Ban filter for endlessh
#
# Endless SSH is an SSH tarpit. Using this, anyone who falls in can be banned from other services on the machine too.
# Log verbosity for endlessh needs to be at least level 1 to get the IPs of connections.

[INCLUDES]

# Read common prefixes. If any customizations available -- read them from
# common.local
before = common.conf

[Definition]

_daemon = endlessh

# Some log lines from version packaged with Ubuntu 23.04
# Jul 08 16:03:11 ns311210 endlessh[1689464]: 2024-07-08T16:03:11.408Z ACCEPT host=::ffff:1.2.3.4 port=62934 fd=7 n=4/4096
# Jul 08 16:03:41 ns311210 endlessh[1689464]: 2024-07-08T16:03:41.409Z CLOSE host=::ffff:1.2.3.4 port=62934 fd=7 time=30.001 bytes=39

# We will trigger it after closing, so that they remain in the pit for some time.


# We don't need this as we implement blanket banning to anyone falling in.
prefregex = 


# This needs to be made more rigorous. The IPaddress below is spat out in the mixed v4/v6 version.

#failregex = CLOSE.*host=<HOST>[\s]+port
# From experimentation on a linux/IPtables system, triggering on acceptance doesn't stop the active tarpit session from running
# For the atrpit to be effective, we want to keep the other side on as long as possible, possibly until the server reboots.
# If banning them on connection might close this connection on some systems, then the tarpit is not effective.
# But at the same time, if they never disconnect (which is what we want), then we aren't banning them yet.
# I won't make assumptions abo how other banning rules or OS setups vary in keeping that connection open
# This hsould probably be in two modes and the user can pick one and test it.
failregex = ACCEPT.*host=<HOST>[\s]+port

ignoreregex = 
 
